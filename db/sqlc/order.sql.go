// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: order.sql

package db

import (
	"context"
	"database/sql"
	"time"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders (
  customer_id,
  service_id,
  order_status,
  order_started,
  order_delivered 
) VALUES (
  $1, $2, $3, $4, $5
) RETURNING order_id, customer_id, service_id, order_status, order_started, order_delivered
`

type CreateOrderParams struct {
	CustomerID     int32        `json:"customer_id"`
	ServiceID      int32        `json:"service_id"`
	OrderStatus    string       `json:"order_status"`
	OrderStarted   time.Time    `json:"order_started"`
	OrderDelivered sql.NullTime `json:"order_delivered"`
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) (Order, error) {
	row := q.db.QueryRowContext(ctx, createOrder,
		arg.CustomerID,
		arg.ServiceID,
		arg.OrderStatus,
		arg.OrderStarted,
		arg.OrderDelivered,
	)
	var i Order
	err := row.Scan(
		&i.OrderID,
		&i.CustomerID,
		&i.ServiceID,
		&i.OrderStatus,
		&i.OrderStarted,
		&i.OrderDelivered,
	)
	return i, err
}
